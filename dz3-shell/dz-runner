#! /bin/sh

export BASENAME=`dirname $0`

# Following line should be uncommented if you want to run the distribution code

#. ${BASENAME}/classpath

# Following line should be uncommented if you want to run the code produced locally on your box
# by Maven build

. ${BASENAME}/classpath-dev

# Comment out the next line if DZ blows out of memory for you - and don't forget to file a bug report.
# See http://diy-zoning.blogspot.com/2010/01/memory-leak-hunt-aftermath.html for details

# UPDATE: It remains to be seen how much memory DZ actually consumes when running under Java 7 and 8.
# With 4MB, it blows out of memory almost immediately (while running within 4MB under Java 6 just fine).
# Commenting out for now.

# MEM_LIMITS="-Xms4m -Xmx4m"

# Uncomment the next line if you experience random freezes.
# Please see http://code.google.com/p/diy-zoning/issues/detail?id=6 for more details and instructions.

#DATA_ASYNC=-Dnet.sf.jukebox.datastream.logger.impl.DataBroadcaster.async=true

# The DAMPER_CRAWL settings has been made explicit (see https://github.com/home-climate-control/dz/issues/129)
# This is the default behavior; if you want to disable it, specify the right arguments to ServoDamper
# in your configuration file

#DAMPER_CRAWL=-Dnet.sf.dz3.device.actuator.servomaster.ServoDamper.crawl=true

# Comment out the following line if you want to disable JMX
# (why would you, though??? this makes sense only in EXTREMELY tight memory conditions)

JMX=-Dcom.sun.management.jmxremote

# We don't need ${JAVA_HOME} *that* much, but if it is set, it'd be nice to honor it

if test -z "${JAVA_HOME}"; then
    export JAVA=`which java`
    if ! test -x "${JAVA}"; then
        echo "Can't find Java binary";
        exit 1;
    fi
else
    export JAVA="${JAVA_HOME}/bin/java"
    if ! test -x "${JAVA}"; then
        echo "JAVA_HOME seems to point into a wrong place (${JAVA_HOME}), can't find Java binary";
        exit 1;
    fi
fi

# Remember that arguments on the command line are relative to the root of CLASSPATH

(cd ${BASENAME} && \
    ${JAVA} ${MEM_LIMITS} \
            ${DATA_ASYNC} \
            ${JMX} \
            -cp ${CLASSPATH} net.sf.dz3.runtime.Container $*)
